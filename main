-- Loomian Legacy Script - Premium Edition
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "LOOMIAN LEGACY PREMIUM",
   LoadingTitle = "Loomian Legacy Premium Tools",
   LoadingSubtitle = "Enhanced Edition",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = "LoomianPremiumConfig",
      FileName = "PremiumSettings"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   }
})

-- Core Variables
local player = game:GetService("Players").LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local musicId = 5410086218
local musicSound
local baseplate = nil

-- Clean up existing sounds
for _, sound in pairs(workspace:GetDescendants()) do
    if sound:IsA("Sound") then sound:Destroy() end
end

-- Music System
local function playMusic()
    if musicSound then musicSound:Stop() end
    musicSound = Instance.new("Sound")
    musicSound.Parent = workspace
    musicSound.SoundId = "rbxassetid://"..musicId
    musicSound.Looped = true
    musicSound.Volume = 0.5
    musicSound:Play()
end

-- Baseplate Management
local function manageBaseplate()
    if baseplate and baseplate.Parent then
        baseplate:Destroy()
        baseplate = nil
        Rayfield:Notify({
            Title = "Platform Removed",
            Content = "The baseplate has been deleted",
            Duration = 2,
            Image = "trash-2"
        })
    else
        baseplate = Instance.new("Part", workspace)
        baseplate.Size = Vector3.new(2000, 5, 2000)
        baseplate.Position = character.HumanoidRootPart.Position + Vector3.new(0, 50, 0)
        baseplate.Anchored = true
        baseplate.Color = Color3.fromRGB(0, 200, 100)
        baseplate.Material = Enum.Material.Neon
        baseplate.Name = "PremiumBaseplate"
        baseplate.Transparency = 0.3
        
        coroutine.wrap(function()
            while baseplate and baseplate.Parent do
                baseplate.Position = character.HumanoidRootPart.Position + Vector3.new(0, 50, 0)
                task.wait(0.1)
            end
        end)()
        
        Rayfield:Notify({
            Title = "Platform Created",
            Content = "2000x5x2000 platform spawned",
            Duration = 3,
            Image = "box"
        })
    end
end

-- Main Controls Tab
local MainTab = Window:CreateTab("Main Controls", "settings")

-- Music Controls
local MusicSection = MainTab:CreateSection("Music System", "music")

local PlayButton = MainTab:CreateButton({
   Name = "Play Music",
   Callback = function()
        playMusic()
        Rayfield:Notify({
            Title = "Music Enabled",
            Content = "Now playing background music",
            Duration = 3,
            Image = "music"
        })
   end,
})

local StopButton = MainTab:CreateButton({
   Name = "Stop Music",
   Callback = function()
        if musicSound then 
            musicSound:Stop()
            Rayfield:Notify({
                Title = "Music Disabled",
                Content = "Audio stopped",
                Duration = 2,
                Image = "volume-x"
            })
        end
   end,
})

-- Teleport System
local TeleportSection = MainTab:CreateSection("Teleport System", "move-3d")

local yLimit = 1000
local teleportRate = 0.5

local TeleportToggle = MainTab:CreateToggle({
   Name = "Auto-Teleport to Loomians",
   CurrentValue = false,
   Flag = "AutoTeleportToggle",
   Callback = function(Value)
        if Value then 
            playMusic()
            Rayfield:Notify({
                Title = "Teleport Enabled",
                Content = "Now hunting Loomians automatically",
                Duration = 3,
                Image = "target"
            })
        else
            Rayfield:Notify({
                Title = "Teleport Disabled",
                Content = "Auto-hunting paused",
                Duration = 3,
                Image = "circle-slash"
            })
        end
   end,
})

local YLimitSlider = MainTab:CreateSlider({
   Name = "Y-Axis Limit",
   Range = {1, 5000},
   Increment = 1,
   Suffix = "studs",
   CurrentValue = 1000,
   Flag = "YLimitSlider",
   Callback = function(Value)
        yLimit = Value
   end,
})

local TeleportSpeedSlider = MainTab:CreateSlider({
   Name = "Teleport Speed",
   Range = {0, 1},
   Increment = 0.01,
   Suffix = "seconds",
   CurrentValue = 0.5,
   Flag = "TeleportSpeedSlider",
   Callback = function(Value)
        teleportRate = Value
        Rayfield:Notify({
            Title = "Teleport Speed Updated",
            Content = string.format("Delay set to %.2f seconds", Value),
            Duration = 2,
            Image = "clock"
        })
   end,
})

-- Visual Tab
local VisualTab = Window:CreateTab("Visual Tools", "eye")

local VisualSection = VisualTab:CreateSection("Visual Effects", "palette")

local BaseplateButton = VisualTab:CreateButton({
   Name = "Toggle Baseplate",
   Callback = manageBaseplate,
})

local CharacterColorPicker = VisualTab:CreateColorPicker({
    Name = "Character Color",
    Color = Color3.fromRGB(255,255,255),
    Flag = "CharacterColorPicker",
    Callback = function(Value)
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Color = Value
            end
        end
    end
})

-- Utility Tab
local UtilityTab = Window:CreateTab("Utilities", "wrench")

local UtilitySection = UtilityTab:CreateSection("Game Utilities", "tool")

local AntiAFKToggle = UtilityTab:CreateToggle({
   Name = "Anti-AFK",
   CurrentValue = false,
   Flag = "AntiAFKToggle",
   Callback = function(Value)
        if Value then
            Rayfield:Notify({
                Title = "Anti-AFK Enabled",
                Content = "You won't be kicked for inactivity",
                Duration = 3,
                Image = "user-check"
            })
        else
            Rayfield:Notify({
                Title = "Anti-AFK Disabled",
                Content = "Normal AFK rules apply",
                Duration = 3,
                Image = "user-x"
            })
        end
   end,
})

local FPSBoostToggle = UtilityTab:CreateToggle({
   Name = "FPS Boost",
   CurrentValue = false,
   Flag = "FPSBoostToggle",
   Callback = function(Value)
        if Value then
            settings().Rendering.QualityLevel = 1
            Rayfield:Notify({
                Title = "FPS Boost Enabled",
                Content = "Graphics quality reduced for performance",
                Duration = 3,
                Image = "zap"
            })
        else
            settings().Rendering.QualityLevel = 21
            Rayfield:Notify({
                Title = "FPS Boost Disabled",
                Content = "Graphics quality restored",
                Duration = 3,
                Image = "monitor"
            })
        end
   end,
})

-- Loomian Detection and Teleport System
local function getLoomians()
    local loomians = {}
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("BasePart") and obj.Name:lower():find("loomian") and obj.Position.Y <= yLimit then
            table.insert(loomians, obj)
        end
    end
    return loomians
end

-- Main Hunting Loop
task.spawn(function()
    while true do
        if TeleportToggle.CurrentValue then
            local loomians = getLoomians()
            for _, loomian in ipairs(loomians) do
                if not TeleportToggle.CurrentValue then break end
                if loomian and loomian.Parent then
                    humanoid.RootPart.CFrame = CFrame.new(loomian.Position)
                    task.wait(teleportRate > 0 and teleportRate or 0)
                end
            end
        end
        task.wait()
    end
end)

-- Anti-AFK System
task.spawn(function()
    while true do
        if AntiAFKToggle.CurrentValue then
            game:GetService("Players").LocalPlayer.Idled:Connect(function()
                game:GetService("VirtualUser"):Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
                task.wait(1)
                game:GetService("VirtualUser"):Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
            end)
        end
        task.wait(10)
    end
end)

-- Initialize
Rayfield:LoadConfiguration()

-- Welcome Notification
task.wait(1)
Rayfield:Notify({
   Title = "Loomian Legacy Premium",
   Content = "Premium tools successfully loaded!\nEnjoy your enhanced experience.",
   Duration = 6,
   Image = "sparkles"
})
